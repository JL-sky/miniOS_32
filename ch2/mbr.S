;主引导程序MBR，由BIOS通过jmp 0:0x7c00跳转
 
;------------------------------------------
;vstart=0x7c00表示本程序在编译时，起始地址编译为0x7c00
SECTION MBR vstart=0x7c00
;使用通用寄存器中的值（0）初始化其余寄存器
    mov ax,cs
    mov ds,ax
    mov es,ax
    mov ss,ax
    mov fs,ax
;初始化栈指针
    mov sp,0x7c00
;------------------------------------------
 
 
;------------------------------------------
;利用0x06号功能进行清屏
;INT 0x10 功能号：0x06 功能描述：上卷窗口清屏
;输入:
    ;AH 功能号：0x06
    ;AL=上卷的行数（如果为0，则表示全部）
    ;BH=上卷的行属性
    ;(CL,CH)=窗口左上角(X,Y)位置
    ;(DL,DH)=窗口右下角(X,Y)位置
;返回值
    ;无返回值
    mov ax,0x0600
    mov bx,0x0700
    mov cx,0        ;左上角(0,0)
    mov dx,0x184f   ;右下角(80,25)
                    ;0x18=24，0x4f=79
    int 0x10        ;调用BIOS中断函数
;------------------------------------------
 
;------------------------------------------
;获取光标位置
;功能号：3
;输入：
    ;ah:3
    ;bh:存储待获取光标的页号
;输出:
    ;ch=光标开始行，cl=光标结束行
    ;dh=光标所在行号，cl=光标所在列号
    mov ah,3
    mov bh,0
 
    int 0x10
;------------------------------------------
 
;------------------------------------------
;打印字符串,使用13号子功能
    mov ax,message
;es:bp为串首地址，es与cs的值一样，开始已经被初始化
    mov bp,ax
;光标位置使用dx中的内容，cx中的内容可忽略
;cx为串的长度，不包括结束符0的字符个数
    mov cx,5
;ah=13表示使用13号子功能
;al=01表示设置写字符的方式，其中01表示显示字符串并跟随光标移动
    mov ax,0x1301
;bh存储要显示的页号，此处是第0页（这里的页就是屏，因此bh指定的第0页就是第0屏的意思）
;bl是字符属性，02h表示黑底绿字
    mov bx,0x2
    int 0x10
 
    jmp $
;定义打印的字符串
    message db "1 MBR"
 
;$表示该行指令地址，$$表示该段（section）的开始地址，因此（$-$$）表示程序总共占用的字节大小
;由于mbr程序的最后两个字节的内容（标志位0x55,0xaa）是固定的，而一个扇区总共是512字节，
;因此要把前510（512-2）个字节的内容给填满。
;故times 510-($-$$) db 0这段代码就表示用0将本扇区剩余空间进行填充
    times 510-($-$$) db 0
    db 0x55,0xaa
 
 
